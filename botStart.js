import UserHistory from './UserHistory.js';
import ChatService from './ChatService.js';

export default function botStart(
  bot,
  chatId = null,
  chatID = null,
  users = null
) {
  const sendWelcome = async (
    chatIdToUse,
    userName = '–î—Ä—É–≥',
    fullAccess = false
  ) => {
    const welcomeMessage = await ChatService.welcome(fullAccess); // <-- await!

    const options = {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üß† AI-–ø—Å–∏—Ö–æ–ª–æ–≥', callback_data: 'psychologist' }],
          [{ text: 'üîÆ AI-—Ç–∞—Ä–æ–ª–æ–≥', callback_data: 'natal_chart' }],
          [
            {
              text: 'üí¨ –ï—Å–ª–∏ –±—ã –î–∂–µ–π—Å–æ–Ω –°—Ç–µ—Ç—Ö–µ–º —Ä–∞–±–æ—Ç–∞–ª –≤ IT...',
              callback_data: 'quotes',
            },
          ],
          [
            fullAccess
              ? { text: 'üßò –ù–∞–π–¥–µ—Ç—Å—è –≤—Å–µ!', callback_data: 'ask' }
              : { text: 'üÜò  –û—Å–≤–æ–±–æ–¥–∏—Ç—å –≠–ª–∏—Å', callback_data: 'quiz' },
          ],
        ],
      },
    };

    bot.sendMessage(chatIdToUse, welcomeMessage, options);
  };

  if (chatId && chatID && users) {
    // üëá –î–æ–±–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ—Ç
    if (!users.has(chatID)) {
      users.set(chatID, new UserHistory(chatID));
    }

    const fullAccess = users.get(chatID).fullAccess;
    sendWelcome(chatId, '–î—Ä—É–≥', fullAccess);
  } else {
    bot.onText(/\/start/, (msg) => {
      const userName = msg.from.first_name || msg.from.username || '–î—Ä—É–≥';
      const chatIdFromStart = msg.chat.id;
      const userId = msg.from.id;

      // üëá –î–æ–±–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ—Ç
      if (!users.has(userId)) {
        users.set(userId, new UserHistory(userId));
      }

      const fullAccess = users.get(userId).fullAccess;

      bot.setMyCommands([
        { command: '/start', description: '–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é' },
        { command: '/clear', description: '–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é' },
      ]);

      sendWelcome(chatIdFromStart, userName, fullAccess);
    });

    bot.onText(/\/clear/, (msg) => {
      const chatId = msg.chat.id;
      const userId = msg.from.id;

      if (users.has(userId)) {
        const user = users.get(userId);
        user.clearHistory();
      }

      bot.sendMessage(chatId, 'üßπ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—á–∏—â–µ–Ω–∞.');
    });
  }
}
